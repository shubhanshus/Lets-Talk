// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";

package letstalk;

message User{
  string email = 1;
  string password1 = 2;
  string firstname = 3;
  string lastname = 4;
}

message Talk{
  string email = 1;
  string talk = 2;
  string date = 3;
}

message SignupRequest {
  User user=1;
}
message SignupReply {
  string message = 1;
  string sessionid=2;
}

message LoginRequest {
  string email = 1;
  string password1 = 2;
}
message LoginReply {
  string message = 1;
  string sessionId=2;
}

message LogoutRequest {
  string email = 1;
}
message LogoutReply {
  string message = 1;
}

message CancelRequest {
  string email = 1;
}
message CancelReply {
  string message = 1;
}

message FollowRequest {
  string email = 1;
}
message FollowReply {
  string message = 1;
}

message TalkRequest {
  Talk talk=1;
  string message=2;
}
message TalkReply {
  string message=1;
  repeated Talk talk=2;
}

message GetUsers{
  repeated User user=1;
}

message GetTalks{
  repeated Talk talk=1;
}

//The signup request
service Letstalk {
  // Sends a signup request
  rpc SendSignup (SignupRequest) returns (SignupReply) {}

  // Sends a login request
  rpc SendLogin (LoginRequest) returns (LoginReply) {}

  // Sends a logout request
  rpc SendLogout (LogoutRequest) returns (LogoutReply) {}

  // Sends a cancel request
  rpc SendCancel (CancelRequest) returns (CancelReply) {}

  // Sends a follow request
  rpc SendFollow (FollowRequest) returns (FollowReply) {}

  // Sends a talk request
  rpc SendTalk (TalkRequest) returns (TalkReply) {}

}
